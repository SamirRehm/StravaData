RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites <- as.data.frame(fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content)), flatten=TRUE)
RActivites2 <- as.data.frame(fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content)), flatten=TRUE)
RActivites <- rbind(RActivites, RActivites2)
RActivites <- as.data.frame(fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))[[2]], flatten=TRUE)
RActivites <- as.data.frame(fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))[[8]], flatten=TRUE)
RActivites = rbind_pages(RActivites, RActivites2)
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(RActivites, RActivites2)
RActivites = rbind_pages(list(RActivites, RActivites2))
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
shiny::runApp('GitHub/NHLData')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(list(RActivites, RActivites2))
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
RActivites$distance <- RActivites$distance/1000.0
RActivites$Pace <- RActivites$moving_time/RActivites$distance/60*1000
RActivites$Pace <- paste("<b>", floor(RActivites$Pace), ":", str_pad(round((RActivites$Pace - floor(RActivites$Pace))*60), 2, pad = "0"), "/km", "</b>", sep = "")
View(RActivites)
RunningData <- RActivites[,c(3,4,5,6,7,8,14,48)]
View(RunningData)
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(list(RActivites, RActivites2))
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
RActivites$Pace <- RActivites$moving_time/RActivites$distance/60*1000
RActivites$Pace <- paste("<b>", floor(RActivites$Pace), ":", str_pad(round((RActivites$Pace - floor(RActivites$Pace))*60), 2, pad = "0"), "/km", "</b>", sep = "")
RActivites$distance <- RActivites$distance/1000.0
RunningData <- RActivites[,c(3,4,5,6,7,8,14,48)]
View(RunningData)
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
library(httr)
library(jsonlite)
library(lubridate)
library(plotly)
library(stringr)
library(plyr)
library(sp)
library(googleway)
library(dplyr)
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
View(RActivites)
shiny::runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
View(RunningData)
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/NHLData')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
RActivites$type[grep('soccer'), Ractivites$name, ignore.case = TRUE] = soccer
RActivites$type[grep('soccer', Ractivites$name, ignore.case = TRUE)] = 'Soccer'
RActivites$type[grep('soccer', RActivites$name, ignore.case = TRUE)] = 'Soccer'
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(list(RActivites, RActivites2))
RActivites$type[grep('soccer', RActivites$name, ignore.case = TRUE)] = 'Soccer'
View(RActivites)
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
shiny::runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
stats =RunningData[RunningData$WeekStart == input$Week,]
stats =RunningData[RunningData$WeekStart == '10-01-2018',]
runTypes = c('warm', 'interval', 'tempo', 'fartlek', 'long', 'easy', 'cool')
names = c('Warm-up', 'Intervals', 'Tempo Run', 'Fartlek', 'Long Run', 'Easy Run', 'Cool-down')
distancePerType = c()
for(i in 1:length(runTypes)) {
distancePerType[[i]] = sum(stats$distances[grep(runTypes[[i]], stats$name, ignore.case=TRUE),])
}
pieChartData = data.frame(names, distancePerType)
View(pieChartData)
View(stats)
stats = RunningData[RunningData$WeekStart == '2018-10-01',]
stats = RunningData[RunningData$WeekStart == '2018-10-01',]
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(list(RActivites, RActivites2))
RActivites$type[grep('soccer', RActivites$name, ignore.case = TRUE)] = 'Soccer'
RActivites$type[grep('tennis', RActivites$name, ignore.case = TRUE)] = 'Tennis'
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
RActivites$Pace <- RActivites$moving_time/RActivites$distance/60*1000
RActivites$Pace <- paste("<b>", floor(RActivites$Pace), ":", str_pad(round((RActivites$Pace - floor(RActivites$Pace))*60), 2, pad = "0"), "/km", "\nHR:", RActivites$average_heartrate, "</b>", sep = "")
RActivites$distance <- RActivites$distance/1000.0
RunningData <- RActivites[,c(3,4,5,6,7,8,14,48)]
i <- rep(RunningData$start_date_local[[1]], nrow(RunningData))
RunningData$Week <- as.numeric(floor(difftime(RunningData$start_date_local, i, units = "weeks") + 0.01) + 1)
RunningData$WeekStart = as.Date("2018-02-26") + (RunningData$Week-1) * 7
distancePerWeek = RunningData %>%
group_by(WeekStart) %>%
summarise(Distance = sum(distance))
stats = RunningData[RunningData$WeekStart == '2018-10-01',]
runTypes = c('warm', 'interval', 'tempo', 'fartlek', 'long', 'easy', 'cool')
names = c('Warm-up', 'Intervals', 'Tempo Run', 'Fartlek', 'Long Run', 'Easy Run', 'Cool-down')
distancePerType = c()
for(i in 1:length(runTypes)) {
distancePerType[[i]] = sum(stats$distances[grep(runTypes[[i]], stats$name, ignore.case=TRUE),])
}
pieChartData = data.frame(names, distancePerType)
View(pieChartData)
x = stats$distances[grep('warm', stats$name, ignore.case=TRUE),]
x = stats[grep('warm', stats$name, ignore.case=TRUE),]
runApp('GitHub/StravaData/Strava')
runTypes = c('warm', 'interval', 'tempo', 'fartlek', 'long', 'easy', 'cool')
names = c('Warm-up', 'Intervals', 'Tempo Run', 'Fartlek', 'Long Run', 'Easy Run', 'Cool-down')
distancePerType = c()
for(i in 1:length(runTypes)) {
distancePerType[[i]] = sum(stats$distance[grep(runTypes[[i]], stats$name, ignore.case=TRUE),])
}
distancePerType = c()
for(i in 1:length(runTypes)) {
distancePerType[[i]] = stats$distance[grep(runTypes[[i]], stats$name, ignore.case=TRUE),]
}
distancePerType[[i]] = stats$distance[grep('warm', stats$name, ignore.case=TRUE),]
distancePerType[[i]] = stats[grep('warm', stats$name, ignore.case=TRUE),]
distancePerType[[i]] = stats[grep('warm', stats$name, ignore.case=TRUE),]$distance
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/NHLData')
runApp('GitHub/NHLData')
runApp('GitHub/NHLData')
runApp('GitHub/NHLData')
runApp('GitHub/NHLData')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(list(RActivites, RActivites2))
RActivites$type[grep('soccer', RActivites$name, ignore.case = TRUE)] = 'Soccer'
RActivites$type[grep('tennis', RActivites$name, ignore.case = TRUE)] = 'Tennis'
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
RActivites$Pace <- RActivites$moving_time/RActivites$distance/60*1000
RActivites$Pace <- paste("<b>", floor(RActivites$Pace), ":", str_pad(round((RActivites$Pace - floor(RActivites$Pace))*60), 2, pad = "0"), "/km", "\nHR:", RActivites$average_heartrate, "</b>", sep = "")
RActivites$distance <- RActivites$distance/1000.0
RunningData <- RActivites[,c(3,4,5,6,7,8,14,48)]
i <- rep(RunningData$start_date_local[[1]], nrow(RunningData))
RunningData$Week <- as.numeric(floor(difftime(RunningData$start_date_local, i, units = "weeks") + 0.01) + 1)
RunningData$WeekStart = as.Date("2018-02-26") + (RunningData$Week-1) * 7
distancePerWeek = RunningData %>%
group_by(WeekStart) %>%
summarise(Distance = sum(distance))
View(RunningData)
View(RActivites)
View(RActivites2)
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(list(RActivites, RActivites2))
RActivites$type[grep('soccer', RActivites$name, ignore.case = TRUE)] = 'Soccer'
RActivites$type[grep('tennis', RActivites$name, ignore.case = TRUE)] = 'Tennis'
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
RActivites$Pace <- RActivites$moving_time/RActivites$distance/60*1000
RActivites$Pace <- paste("<b>", floor(RActivites$Pace), ":", str_pad(round((RActivites$Pace - floor(RActivites$Pace))*60), 2, pad = "0"), "/km", "\nHR:", RActivites$average_heartrate, "</b>", sep = "")
RActivites$distance <- RActivites$distance/1000.0
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/NHLData')
library(DT)
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
RunningData <- RActivites[,c(3,4,5,6,7,8,14,49)]
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
shiny::runApp('GitHub/StravaData/Strava')
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(list(RActivites, RActivites2))
RActivites$type[grep('soccer', RActivites$name, ignore.case = TRUE)] = 'Soccer'
RActivites$type[grep('tennis', RActivites$name, ignore.case = TRUE)] = 'Tennis'
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
RActivites$PaceNumeric <- RActivites$moving_time/RActivites$distance/60*1000
RActivites$Pace <- paste("<b>", floor(RActivites$PaceNumeric), ":", str_pad(round((RActivites$PaceNumeric - floor(RActivites$PaceNumeric))*60), 2, pad = "0"), "/km", "\nHR:", RActivites$average_heartrate, "</b>", sep = "")
RActivites$distance <- RActivites$distance/1000.0
View(RActivites)
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
RunningData <- RActivites[,c(3,4,5,6,7,8,14,47,49,50)]
View(RunningData)
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
shiny::runApp('GitHub/StravaData/Strava')
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=1")$content))
RActivites2 <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=200&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537&page=2")$content))
RActivites = rbind_pages(list(RActivites, RActivites2))
RActivites$type[grep('soccer', RActivites$name, ignore.case = TRUE)] = 'Soccer'
RActivites$type[grep('tennis', RActivites$name, ignore.case = TRUE)] = 'Tennis'
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
RActivites$PaceNumeric <- RActivites$moving_time/RActivites$distance/60*1000
RActivites$Pace <- paste("<b>", floor(RActivites$PaceNumeric), ":", str_pad(round((RActivites$PaceNumeric - floor(RActivites$PaceNumeric))*60), 2, pad = "0"), "/km", "\nHR:", RActivites$average_heartrate, "</b>", sep = "")
RActivites$distance <- RActivites$distance/1000.0
RunningData <- RActivites[,c(3,4,5,6,7,8,14,47,49,50,10)]
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
setwd("/Users/Samir Rehmtulla/Documents/Training-Data-Website")
library(httr)
library(jsonlite)
library(lubridate)
library(plotly)
library(stringr)
library(plyr)
library(sp)
library(googleway)
rm(list=ls())
options(stringsAsFactors = FALSE)
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=80&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537")$content))
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
steadyRuns <- grep("steady", RActivites$name, ignore.case = TRUE)
restRuns <- grep("recovery", RActivites$name, ignore.case = TRUE)
workRuns <- grep("work", RActivites$name, ignore.case = TRUE)
tempoRuns <- grep("tempo", RActivites$name, ignore.case = TRUE)
trackRuns <- grep("track", RActivites$name, ignore.case = TRUE)
longRuns <- grep("Long", RActivites$name, ignore.case = TRUE)
intenseRuns <- grep("intense", RActivites$name, ignore.case = TRUE)
WarmupRuns <- grep("warm", RActivites$name, ignore.case = TRUE)
CooldownRuns <- grep("cool", RActivites$name, ignore.case = TRUE)
ids <- RActivites$id
urlP1 <- rep("https://www.strava.com/api/v3/activities/", length(ids))
urlP2 <- rep("access_token=738ba7d3a2a53c870f699ae5a297383eef11f537", length(ids))
urlP3 <- rep("?", length(ids))
urlP4 <- rep("/streams?keys=time,distance,velocity_smooth&key_by_type=true&", length(ids))
PolylineURLs <- paste(urlP1, ids, urlP3, urlP2, sep="")
StreamURLs <- paste(urlP1, ids, urlP4, urlP2, sep= "")
Polylines <- c()
DistanceStreams <- c()
TimeStreams <- c()
VelocityStreams <- c()
for(i in 1:length(PolylineURLs)) {
Activity <- fromJSON(rawToChar(GET(url = PolylineURLs[[i]])$content))$map
if(is.null(Activity$polyline))
{ Polylines[[i]] <- "" } else { Polylines[[i]] <- Activity$polyline}
}
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
setwd("/Users/Samir Rehmtulla/Documents/Training-Data-Website")
library(httr)
library(jsonlite)
library(lubridate)
library(plotly)
library(stringr)
library(plyr)
library(sp)
library(googleway)
rm(list=ls())
options(stringsAsFactors = FALSE)
RActivites <- fromJSON(rawToChar(GET(url = "https://www.strava.com/api/v3/athlete/activities?after=1519601753&per_page=80&access_token=738ba7d3a2a53c870f699ae5a297383eef11f537")$content))
RActivites$start_date_local <- strtrim(RActivites$start_date_local, 10)
steadyRuns <- grep("steady", RActivites$name, ignore.case = TRUE)
restRuns <- grep("recovery", RActivites$name, ignore.case = TRUE)
workRuns <- grep("work", RActivites$name, ignore.case = TRUE)
tempoRuns <- grep("tempo", RActivites$name, ignore.case = TRUE)
trackRuns <- grep("track", RActivites$name, ignore.case = TRUE)
longRuns <- grep("Long", RActivites$name, ignore.case = TRUE)
intenseRuns <- grep("intense", RActivites$name, ignore.case = TRUE)
WarmupRuns <- grep("warm", RActivites$name, ignore.case = TRUE)
CooldownRuns <- grep("cool", RActivites$name, ignore.case = TRUE)
ids <- RActivites$id
urlP1 <- rep("https://www.strava.com/api/v3/activities/", length(ids))
urlP2 <- rep("access_token=738ba7d3a2a53c870f699ae5a297383eef11f537", length(ids))
urlP3 <- rep("?", length(ids))
urlP4 <- rep("/streams?keys=time,distance,velocity_smooth&key_by_type=true&", length(ids))
PolylineURLs <- paste(urlP1, ids, urlP3, urlP2, sep="")
StreamURLs <- paste(urlP1, ids, urlP4, urlP2, sep= "")
Polylines <- c()
DistanceStreams <- c()
TimeStreams <- c()
VelocityStreams <- c()
for(i in 1:length(PolylineURLs)) {
Activity <- fromJSON(rawToChar(GET(url = PolylineURLs[[i]])$content))$map
if(is.null(Activity$polyline))
{ Polylines[[i]] <- "" } else { Polylines[[i]] <- Activity$polyline}
}
for(i in 1:length(StreamURLs)) {
Activity <- fromJSON(rawToChar(GET(url = StreamURLs[[i]])$content))
DistanceStream <- Activity$distance$data
TimeStream <- Activity$time$data
VelocityStream <- Activity$velocity_smooth$data
if(is.null(DistanceStream))
{ DistanceStreams[[i]] <- 0 } else { DistanceStreams[[i]] <- DistanceStream}
if(is.null(TimeStream))
{ TimeStreams[[i]] <- 0 } else { TimeStreams[[i]] <- TimeStream}
if(is.null(VelocityStream))
{ VelocityStreams[[i]] <- 0 } else { VelocityStreams[[i]] <- VelocityStream}
}
RunType <- vector(mode = "character", length = nrow(RActivites))
for(i in 1:length(RunType)) {
if(i %in% steadyRuns) { RunType[[i]] <- "Steady"}
else if(i %in% intenseRuns) { RunType[[i]] <- "Intense" }
else if(i %in% tempoRuns) { RunType[[i]] <- "Tempo" }
else if(i %in% trackRuns) { RunType[[i]] <- "Track" }
else if (i %in% longRuns) { RunType[[i]] <- "Long"}
else if(i %in% workRuns) { RunType[[i]] <- 'Work' }
else if(i %in% restRuns) { RunType[[i]] <- "Rest" }
else if(i %in% WarmupRuns) { RunType[[i]] <- "Warm-up"}
else if(i %in% CooldownRuns) { RunType[[i]] <- "Cool-down"}
else { RunType[[i]] <- "Misc"}
}
Pace <- RActivites$moving_time/RActivites$distance/60*1000
Pace <- paste("<b>", floor(Pace), ":", str_pad(round((Pace - floor(Pace))*60), 2, pad = "0"), "/km", "</b>", sep = "")
RunningData <- data.frame(RActivites$start_date_local, RActivites$distance/1000.0, RActivites$moving_time, RunType, Pace, Polylines)
RunningData <- plyr::rename(RunningData, c("RActivites.start_date_local" = "Date", "RActivites.distance.1000" = "Distance", "RActivites.moving_time" = "Time"))
RunningData$Day <- weekdays(as.Date(RunningData$Date))
i <- rep(RunningData$Date[[1]], nrow(RunningData))
RunningData$Week <- as.numeric(floor(difftime(RunningData$Date, i, units = "weeks") + 0.01) + 1)
RunningData$DistanceStreams <- DistanceStreams
RunningData$TimeStreams <- TimeStreams
RunningData$VelocityStreams <- VelocityStreams
OriginalRunningData <- RunningData
RunningDataList <- split(RunningData, RunningData$Week)
save(RunningDataList, file = "data.RData")
rmarkdown::render_site()
for (weekOfPlan in c(unique(OriginalRunningData$Week))){
rmarkdown::render('/Users/Samir Rehmtulla/Documents/Training-Data-Website/Week1AdvancedStatistics.Rmd',
output_file =  paste("report_", weekOfPlan, ".html", sep=''),
output_dir = '/Users/Samir Rehmtulla/Documents/Training-Data-Website')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
shiny::runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
vec <- c(5,5,1)
mean(vec)
vec2 <- 1/(vec*60/1000)
mean(vec2)
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
shiny::runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
shiny::runApp('GitHub/StravaData/Strava')
runApp('GitHub/StravaData/Strava')
